/*Nombre de clase		: CAgregarAdeudos
*Descripción de la clase	: Clase que permite registrar los adeudos de las rentas mensuales
*Fecha	de creación		: 01/05/2016
*Elaboro			: Geovany Pichardo Gutierrez
*Fecha	de Liberación		: 
*Autorizó			: Mauro Sánchez Sánchez//Techno Engineers
*Fecha Mantenimiento		: 25/06/2016
*Folio mantenimiento		: 01
*Descripción del mantto.	: Se realizó la actualización de métodos y transformacion de código con calidad.
*Responsable			: Geovany Pichardo Gutierrez
*Revisor 			: Diego Enrique Sánchez Ordoñez
*/
package bfx.adeudos;

import bfx.Clases.CAdeudos;
import bfx.clases.CUsuariosDE;
import bfx.controladores.CManipulaDB;
import bfx.controladores.CManipulaInterfaz;
import bfx.controladores.CMensajes;
import bfx.controladores.CPanelFondo;
import bfx.controladores.CQuerys;
import bfx.controladores.CRentasParametros;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Geovany
 */
public class CAgregarAdeudos extends javax.swing.JFrame
{

    /**
     * Creates new form CAgregarAdeudos
     */
    public Connection pbCNcon = CManipulaDB.cmetpbConectaDB();
    CQuerys objQuerry = new CQuerys();
    public ArrayList<CAdeudos> pbALAdeudosRealizados = null;
    public ArrayList<CUsuariosDE> pbALUsuarios = null;
    public ArrayList<CRentasParametros> pbALRentasParametros = null;
    DefaultTableModel objDTMModelo;
    public static Calendar objFecha = new GregorianCalendar();
    public static Date objDate = objDate = new Date();
    public static String pbSMes;

    public CAgregarAdeudos()
    {
        initComponents();
        this.setLayout(null);
        this.setLocationRelativeTo(null);
        this.add(objCPanelFondo);
        this.pack();
        this.setSize(569 , 333);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        objCPanelFondo = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        objJTRegistro = new javax.swing.JTable();
        objJBGenerar = new javax.swing.JButton();
        objJBGuardar = new javax.swing.JButton();
        objJBGuardar1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Registró de Adudos");
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowOpened(java.awt.event.WindowEvent evt)
            {
                formWindowOpened(evt);
            }
        });

        objJTRegistro.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        objJTRegistro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Adeudo", "No. de Usuario", "Nombre", "Status Actual"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean []
            {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(objJTRegistro);

        objJBGenerar.setBackground(new java.awt.Color(255, 255, 255));
        objJBGenerar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        objJBGenerar.setText("Generar");
        objJBGenerar.setMaximumSize(new java.awt.Dimension(150, 25));
        objJBGenerar.setMinimumSize(new java.awt.Dimension(150, 25));
        objJBGenerar.setPreferredSize(new java.awt.Dimension(150, 25));
        objJBGenerar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                objJBGenerarActionPerformed(evt);
            }
        });
        objJBGenerar.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                objJBGenerarKeyPressed(evt);
            }
        });

        objJBGuardar.setBackground(new java.awt.Color(255, 255, 255));
        objJBGuardar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        objJBGuardar.setText("Guardar");
        objJBGuardar.setEnabled(false);
        objJBGuardar.setMaximumSize(new java.awt.Dimension(150, 25));
        objJBGuardar.setMinimumSize(new java.awt.Dimension(150, 25));
        objJBGuardar.setPreferredSize(new java.awt.Dimension(150, 25));
        objJBGuardar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                objJBGuardarActionPerformed(evt);
            }
        });
        objJBGuardar.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                objJBGuardarKeyPressed(evt);
            }
        });

        objJBGuardar1.setBackground(new java.awt.Color(255, 255, 255));
        objJBGuardar1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        objJBGuardar1.setText("Salir");
        objJBGuardar1.setMaximumSize(new java.awt.Dimension(150, 25));
        objJBGuardar1.setMinimumSize(new java.awt.Dimension(150, 25));
        objJBGuardar1.setPreferredSize(new java.awt.Dimension(150, 25));
        objJBGuardar1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                objJBGuardar1ActionPerformed(evt);
            }
        });
        objJBGuardar1.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                objJBGuardar1KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout objCPanelFondoLayout = new javax.swing.GroupLayout(objCPanelFondo);
        objCPanelFondo.setLayout(objCPanelFondoLayout);
        objCPanelFondoLayout.setHorizontalGroup(
            objCPanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(objCPanelFondoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(objCPanelFondoLayout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addComponent(objJBGenerar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(objJBGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(objJBGuardar1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(168, Short.MAX_VALUE))
        );
        objCPanelFondoLayout.setVerticalGroup(
            objCPanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(objCPanelFondoLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(objCPanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(objJBGenerar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(objJBGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(objJBGuardar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 54, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(objCPanelFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(objCPanelFondo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void objJBGuardarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_objJBGuardarActionPerformed
    {//GEN-HEADEREND:event_objJBGuardarActionPerformed
        String lSDatos;
        ArrayList<Object> lALMontoRenta = objQuerry.metpbALSeleccion(pbCNcon, "MAX(idrentaparametro)", "rentasparametros", "");
        int lEUltimo = Integer.parseInt(String.valueOf(lALMontoRenta.get(0)).trim()) - 1;
        if (objJTRegistro.getRowCount() == 0)
        {
            CMensajes.cmetpbFalla(this, "No hay datos en la tabala");
        } else
        {
            for (int lEi = 0; lEi < objDTMModelo.getRowCount(); lEi++)
            {
                if (Boolean.parseBoolean(String.valueOf(objDTMModelo.getValueAt(lEi, 0))))
                {
                    lSDatos = null + ","
                            + objDTMModelo.getValueAt(lEi, 1) + ",'"
                            + cmetpbSMes(objDate.getMonth()) + "',"
                            + objFecha.get(Calendar.YEAR) + ","
                            + pbALRentasParametros.get(lEUltimo).getPpvSRentaActual()
                            + "," + null;
                    objQuerry.metpbSInsertar(pbCNcon, "adeudos", lSDatos);
                    if (Integer.parseInt((objDTMModelo.getValueAt(lEi, 3))+"")==2)
                    {
                        objQuerry.metpbSModificar(pbCNcon, "usuarios","status","4","idusuario="+objDTMModelo.getValueAt(lEi, 1)+";");
                        System.out.println("Actualize a 4");
                    }else
                    {
                        objQuerry.metpbSModificar(pbCNcon, "usuarios","status","3","idusuario="+objDTMModelo.getValueAt(lEi, 1)+";");
                        System.out.println("Actualize a 3");
                    }
                    
                }
            }
            CManipulaInterfaz.cmetpbHabilita(false, objJBGuardar);
            CMensajes.cmetpbExito(this);
            metpbLimpiaTabla();
            formWindowOpened(null);
        }
    }//GEN-LAST:event_objJBGuardarActionPerformed


    private void objJBGenerarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_objJBGenerarActionPerformed
    {//GEN-HEADEREND:event_objJBGenerarActionPerformed

        objDTMModelo = (DefaultTableModel) objJTRegistro.getModel();
        ArrayList<Integer> objALAdeudosTemporal = new ArrayList<>();
        metpbLimpiaTabla();
        if (pbALUsuarios == null)
        {
            CMensajes.cmetpbFalla(this, "No existen usuarios registrados");
        } else
        {
            if (pbALRentasParametros == null)
            {
                CMensajes.cmetpbFalla(this, "No existe una cuota de renta");
            } else
            {
                if (pbALAdeudosRealizados == null)
                {
                    for (int lEi = 0; lEi < pbALUsuarios.size(); lEi++)
                    {
                        metpbLlenaTabla(true, pbALUsuarios.get(lEi).getpbEIdUsuario(), pbALUsuarios.get(lEi).getpbSNombre(),pbALUsuarios.get(lEi).getpbEStatus());
                        CManipulaInterfaz.cmetpbHabilita(true,objJBGuardar);
                    }
                } else
                {
                    for (int lEi = 0; lEi < pbALUsuarios.size(); lEi++)
                    {
                        int lEj;
                        for (lEj = 0; lEj < pbALAdeudosRealizados.size(); lEj++)
                        {
                            if (pbALUsuarios.get(lEi).getpbEIdUsuario()==pbALAdeudosRealizados.get(lEj).getpbEIdUsuarios())
                            {
                                metpbLlenaTabla(false, pbALUsuarios.get(lEi).getpbEIdUsuario(), pbALUsuarios.get(lEi).getpbSNombre(),pbALUsuarios.get(lEi).getpbEStatus());
                                break;
                            }
                        }
                        if (lEj == pbALAdeudosRealizados.size())
                        {
                            metpbLlenaTabla(true, pbALUsuarios.get(lEi).getpbEIdUsuario(), pbALUsuarios.get(lEi).getpbSNombre(),pbALUsuarios.get(lEi).getpbEStatus());
                            CManipulaInterfaz.cmetpbHabilita(true,objJBGuardar);
                        }
                        
                    }
                    
                }
            }
        }
    }//GEN-LAST:event_objJBGenerarActionPerformed

    public void metpbLlenaTabla(Boolean lBCheck, int lEIdUsuario, String lSNombre,int lEStatus)
    {
        objDTMModelo.addRow(new Object[]
        {
            lBCheck,
            lEIdUsuario,
            lSNombre,
            lEStatus
        });
    }

    public void metpbLimpiaTabla()
    {
        if (objJTRegistro.getRowCount() > 0)
        {
            for (int i = 0; i < objJTRegistro.getRowCount(); i++)
            {
                objDTMModelo.removeRow(i);
                i -= 1;
            }
        }
    }

    public static String cmetpbSMes(int lEMes)
    {
        if (lEMes==12)
        {
            lEMes=0;
        }
        switch (lEMes+1)
        {
            case 0:
                pbSMes = "enero";
                break;
            case 1:
                pbSMes = "febrero";
                break;
            case 2:
                pbSMes = "marzo";
                break;
            case 3:
                pbSMes = "abril";
                break;
            case 4:
                pbSMes = "mayo";
                break;
            case 5:
                pbSMes = "junio";
                break;
            case 6:
                pbSMes = "julio";
                break;
            case 7:
                pbSMes = "agosto";
                break;
            case 8:
                pbSMes = "septiembre";
                break;
            case 9:
                pbSMes = "octubre";
                break;
            case 10:
                pbSMes = "noviembre";
                break;
            case 11:
                pbSMes = "diciembre";
                break;
            default:
                pbSMes = "error";
                break;
        }
        return pbSMes;
    }


    private void formWindowOpened(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowOpened
    {//GEN-HEADEREND:event_formWindowOpened
        pbALAdeudosRealizados = CManipulaDB.cmetpbALConsultaAdeudos(pbCNcon, "adeudos where mesadeudo='" + cmetpbSMes(objDate.getMonth())
                + "' and anioadeudo = " + objFecha.get(Calendar.YEAR), "", "");
        pbALUsuarios = CManipulaDB.cmetpbALConsultaU(pbCNcon, "usuarios where status > 0 and"
                + " fechaingreso < '" + objFecha.get(Calendar.YEAR) + "-" + ((objDate.getMonth()) + 1) + "-16'", "", "");
        pbALRentasParametros = CManipulaDB.cmetpbALConsultaR(pbCNcon, "rentasParametros;", "", "");
        objJBGenerar.requestFocus();
    }//GEN-LAST:event_formWindowOpened

    private void objJBGenerarKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_objJBGenerarKeyPressed
    {//GEN-HEADEREND:event_objJBGenerarKeyPressed
        if (evt.getKeyChar() == '\n')
        {
            objJBGenerarActionPerformed(null);   
        }
    }//GEN-LAST:event_objJBGenerarKeyPressed

    private void objJBGuardarKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_objJBGuardarKeyPressed
    {//GEN-HEADEREND:event_objJBGuardarKeyPressed
        if (evt.getKeyChar() == '\n')
        {
            objJBGuardarActionPerformed(null);   
        }
    }//GEN-LAST:event_objJBGuardarKeyPressed

    private void objJBGuardar1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_objJBGuardar1ActionPerformed
    {//GEN-HEADEREND:event_objJBGuardar1ActionPerformed
       dispose();
    }//GEN-LAST:event_objJBGuardar1ActionPerformed

    private void objJBGuardar1KeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_objJBGuardar1KeyPressed
    {//GEN-HEADEREND:event_objJBGuardar1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_objJBGuardar1KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(CAgregarAdeudos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(CAgregarAdeudos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(CAgregarAdeudos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(CAgregarAdeudos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new CAgregarAdeudos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel objCPanelFondo;
    private javax.swing.JButton objJBGenerar;
    private javax.swing.JButton objJBGuardar;
    private javax.swing.JButton objJBGuardar1;
    private javax.swing.JTable objJTRegistro;
    // End of variables declaration//GEN-END:variables
}
