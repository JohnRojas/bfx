/*Nombre de clase		: CPagoAdeudos
*Descripción de la clase	: Clase que ralizar los pagos de los adeudos pendientes
*Fecha	de creación		: 01/05/2016
*Elaboro			: Geovany Pichardo Gutierrez
*Fecha	de Liberación		: 
*Autorizó			: Mauro Sánchez Sánchez//Techno Engineers
*Fecha Mantenimiento		: 25/06/2016
*Folio mantenimiento		: 01
*Descripción del mantto.	: Se realizó la actualización de métodos y transformacion de código con calidad.
*Responsable			: Geovany Pichardo Gutierrez
*Revisor 			: Diego Enrique Sánchez Ordoñez
*/
package bfx.adeudos;

import bfx.Clases.CAdeudos;
import static bfx.adeudos.CAgregarAdeudos.cmetpbSMes;
import static bfx.adeudos.CAgregarAdeudos.objDate;
import static bfx.adeudos.CAgregarAdeudos.objFecha;
import bfx.clases.CUsuariosDE;
import bfx.controladores.*;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Leviathan
 */
public class CPagoAdeudos extends javax.swing.JFrame
{

    public Connection pbCNcon = CManipulaDB.cmetpbConectaDB();
    CQuerys objQuerry = new CQuerys();
    public ArrayList<CAdeudos> pbALAdeudosRealizados = null;
    public ArrayList<CUsuariosDE> pbALUsuarios = null;
    public ArrayList<CRentasParametros> pbALRentasParametros = null;
    DefaultTableModel objDTMModelo;
    public int pbEOpcionEntrada=0;
    public String pbSCondicion;
    public String pbSCondicion1;
    public String pbSCondicion2;
    public static int pbESeleccionado;

    /**
     * Creates new form VntPrincipal
     */
    public CPagoAdeudos()
    {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        objJBSalir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        objJTRegistro = new javax.swing.JTable();
        objJTBuscar = new javax.swing.JTextField();
        objJCBusqueda = new javax.swing.JComboBox<String>();
        objJBActualizar = new javax.swing.JButton();
        objJTPaterno = new javax.swing.JTextField();
        objJTMaterno = new javax.swing.JTextField();
        objJLPaterno = new javax.swing.JLabel();
        objJLMaterno = new javax.swing.JLabel();
        objJLNombre = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        objJLMonto = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        objJTDeposito = new javax.swing.JTextField();
        objJBPagar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        objJLRentaActual = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Pago de Adeudos");
        setBackground(new java.awt.Color(204, 0, 0));
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowOpened(java.awt.event.WindowEvent evt)
            {
                formWindowOpened(evt);
            }
        });

        objJBSalir.setBackground(new java.awt.Color(255, 255, 255));
        objJBSalir.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        objJBSalir.setText("Salir");
        objJBSalir.setMaximumSize(new java.awt.Dimension(150, 25));
        objJBSalir.setMinimumSize(new java.awt.Dimension(150, 25));
        objJBSalir.setPreferredSize(new java.awt.Dimension(150, 25));
        objJBSalir.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                objJBSalirActionPerformed(evt);
            }
        });

        objJTRegistro.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        objJTRegistro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "No. de Usuario", "Nombre", "Status", "Adeudo"
            }
        )
        {
            boolean[] canEdit = new boolean []
            {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        objJTRegistro.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                objJTRegistroMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(objJTRegistro);
        if (objJTRegistro.getColumnModel().getColumnCount() > 0)
        {
            objJTRegistro.getColumnModel().getColumn(0).setResizable(false);
            objJTRegistro.getColumnModel().getColumn(0).setPreferredWidth(5);
            objJTRegistro.getColumnModel().getColumn(1).setResizable(false);
            objJTRegistro.getColumnModel().getColumn(1).setPreferredWidth(150);
            objJTRegistro.getColumnModel().getColumn(2).setResizable(false);
            objJTRegistro.getColumnModel().getColumn(2).setPreferredWidth(5);
            objJTRegistro.getColumnModel().getColumn(3).setResizable(false);
        }

        objJTBuscar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        objJTBuscar.setMaximumSize(new java.awt.Dimension(150, 25));
        objJTBuscar.setMinimumSize(new java.awt.Dimension(150, 25));
        objJTBuscar.setPreferredSize(new java.awt.Dimension(150, 25));
        objJTBuscar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                objJTBuscarActionPerformed(evt);
            }
        });
        objJTBuscar.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                objJTBuscarKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                objJTBuscarKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                objJTBuscarKeyTyped(evt);
            }
        });

        objJCBusqueda.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        objJCBusqueda.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nombre de Usuario", "No. de Usuario" }));
        objJCBusqueda.setMaximumSize(new java.awt.Dimension(150, 25));
        objJCBusqueda.setMinimumSize(new java.awt.Dimension(150, 25));
        objJCBusqueda.setPreferredSize(new java.awt.Dimension(150, 25));
        objJCBusqueda.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                objJCBusquedaActionPerformed(evt);
            }
        });

        objJBActualizar.setBackground(new java.awt.Color(255, 255, 255));
        objJBActualizar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        objJBActualizar.setText("Actualizar Todo");
        objJBActualizar.setMaximumSize(new java.awt.Dimension(150, 25));
        objJBActualizar.setMinimumSize(new java.awt.Dimension(150, 25));
        objJBActualizar.setPreferredSize(new java.awt.Dimension(150, 25));
        objJBActualizar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                objJBActualizarActionPerformed(evt);
            }
        });

        objJTPaterno.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        objJTPaterno.setMaximumSize(new java.awt.Dimension(150, 25));
        objJTPaterno.setMinimumSize(new java.awt.Dimension(150, 25));
        objJTPaterno.setPreferredSize(new java.awt.Dimension(150, 25));
        objJTPaterno.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                objJTPaternoActionPerformed(evt);
            }
        });
        objJTPaterno.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                objJTPaternoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                objJTPaternoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                objJTPaternoKeyTyped(evt);
            }
        });

        objJTMaterno.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        objJTMaterno.setMaximumSize(new java.awt.Dimension(150, 25));
        objJTMaterno.setMinimumSize(new java.awt.Dimension(150, 25));
        objJTMaterno.setPreferredSize(new java.awt.Dimension(150, 25));
        objJTMaterno.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                objJTMaternoActionPerformed(evt);
            }
        });
        objJTMaterno.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                objJTMaternoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                objJTMaternoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                objJTMaternoKeyTyped(evt);
            }
        });

        objJLPaterno.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        objJLPaterno.setText("Apellido Paterno");

        objJLMaterno.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        objJLMaterno.setText("Apellido Materno");

        objJLNombre.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        objJLNombre.setText("Nombre (s)");

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText("Monto:");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText("Deposito:");

        objJTDeposito.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        objJTDeposito.setEnabled(false);
        objJTDeposito.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                objJTDepositoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                objJTDepositoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                objJTDepositoKeyTyped(evt);
            }
        });

        objJBPagar.setBackground(new java.awt.Color(255, 255, 255));
        objJBPagar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        objJBPagar.setText("Pagar");
        objJBPagar.setEnabled(false);
        objJBPagar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                objJBPagarActionPerformed(evt);
            }
        });
        objJBPagar.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                objJBPagarKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("Renta Actual");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(objJBPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(objJLRentaActual, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(objJLMonto, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(objJTDeposito, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(objJLRentaActual, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(objJLMonto, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(objJTDeposito, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addComponent(objJBPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(objJCBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(objJTBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(objJTPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(objJTMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(objJLNombre)
                        .addGap(98, 98, 98)
                        .addComponent(objJLPaterno)
                        .addGap(73, 73, 73)
                        .addComponent(objJLMaterno))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(objJBActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(objJBSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(64, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(objJCBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(objJTPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(objJTBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(objJTMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(objJLPaterno)
                    .addComponent(objJLMaterno)
                    .addComponent(objJLNombre))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(objJBSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(objJBActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
/**
     *
     * @param evt Evento que abre la ventana llamada Altas1
     */
    private void objJBPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_objJBPagarActionPerformed
        ArrayList<Object> lALMontoRenta = objQuerry.metpbALSeleccion(pbCNcon, "MAX(idrentaparametro)", "rentasparametros", "");
        double lDDiferiencia=0;
        int lEAdelanto=0;
        int lEUltimo = Integer.parseInt(String.valueOf(lALMontoRenta.get(0)).trim()) - 1;
        if (Double.parseDouble(objJTDeposito.getText()) == Double.parseDouble(objJLMonto.getText()))
        {
            for (int lEi = 0; lEi < pbALAdeudosRealizados.size(); lEi++)
            {
                if (pbALAdeudosRealizados.get(lEi).getpbEIdUsuarios()==Integer.parseInt((objDTMModelo.getValueAt(objJTRegistro.getSelectedRow(), 0))+""))
                {
                    objQuerry.metpbSModificar(pbCNcon, "adeudos",
                            "fechapago",
                            "'"+objFecha.get(Calendar.YEAR)+
                                    "/"+((objDate.getMonth())+1)+"/"+
                                    objFecha.get(Calendar.DAY_OF_MONTH)+"'",
                            "idusuarios="+objDTMModelo.getValueAt(objJTRegistro.getSelectedRow(), 0)+";");
                    
                    if (Integer.parseInt((objDTMModelo.getValueAt(objJTRegistro.getSelectedRow(), 2))+"")==4)
                    {
                        objQuerry.metpbSModificar(pbCNcon, "usuarios","status","2","idusuario="+objDTMModelo.getValueAt(objJTRegistro.getSelectedRow(), 0)+";");
                        System.out.println("Actualize a 2");
                        CMensajes.cmetpbMsj(this, "Pago realizado correctamente");
                    }else
                    {
                        objQuerry.metpbSModificar(pbCNcon, "usuarios","status","1","idusuario="+objDTMModelo.getValueAt(objJTRegistro.getSelectedRow(), 0)+";");
                        System.out.println("Actualize a 1");
                        CMensajes.cmetpbMsj(this, "Pago realizado correctamente");
                    }
                }
            }
        }else
        {
            if (Double.parseDouble(objJTDeposito.getText()) > Double.parseDouble(objJLMonto.getText()))
            {
                lDDiferiencia = Double.parseDouble(objJTDeposito.getText()) - Double.parseDouble(objJLMonto.getText());
                lEAdelanto = (int) (lDDiferiencia/(Double.parseDouble(pbALRentasParametros.get(lEUltimo).getPpvSRentaActual())));
                System.out.println("adelanto: "+lEAdelanto);
                if (lEAdelanto > 0)
                {
                    for (int lEi = 0; lEi < lEAdelanto; lEi++)
                    {
                        String lSDatos = null + ","
                            + objDTMModelo.getValueAt(objJTRegistro.getSelectedRow(), 0) + ",'"
                            + cmetpbSMes((objDate.getMonth())+lEi) + "',"
                            + objFecha.get(Calendar.YEAR) + ","
                            + pbALRentasParametros.get(lEUltimo).getPpvSRentaActual()
                            + "," + "'"+((objFecha.get(Calendar.YEAR))+1)+"/"+((objDate.getMonth())+1)+"/"+objFecha.get(Calendar.DAY_OF_MONTH)+"'";
                        objQuerry.metpbSInsertar(pbCNcon, "adeudos", lSDatos);
                    }
                    for (int lEi = 0; lEi < pbALAdeudosRealizados.size(); lEi++)
                    {
                        if (pbALAdeudosRealizados.get(lEi).getpbEIdUsuarios()==Integer.parseInt((objDTMModelo.getValueAt(objJTRegistro.getSelectedRow(), 0))+""))
                        {
                            objQuerry.metpbSModificar(pbCNcon, "adeudos",
                                    "fechapago",
                                    "'"+objFecha.get(Calendar.YEAR)+
                                            "/"+((objDate.getMonth())+1)+"/"+
                                            objFecha.get(Calendar.DAY_OF_MONTH)+"'",
                                    "idusuarios="+objDTMModelo.getValueAt(objJTRegistro.getSelectedRow(), 0)+";");
                            if (Integer.parseInt((objDTMModelo.getValueAt(objJTRegistro.getSelectedRow(), 2))+"")==4)
                            {
                                objQuerry.metpbSModificar(pbCNcon, "usuarios","status","2","idusuario="+objDTMModelo.getValueAt(objJTRegistro.getSelectedRow(), 0)+";");
                                System.out.println("Actualize a 2");
                                CMensajes.cmetpbMsj(this, "Pago realizado correctamente");
                            }else
                            {
                                objQuerry.metpbSModificar(pbCNcon, "usuarios","status","1","idusuario="+objDTMModelo.getValueAt(objJTRegistro.getSelectedRow(), 0)+";");
                                System.out.println("Actualize a 1");
                                CMensajes.cmetpbMsj(this, "Pago realizado correctamente");
                            }
                        }
                    }
                }
            }else
            {
                double lDResto = Integer.parseInt((objDTMModelo.getValueAt(objJTRegistro.getSelectedRow(), 0))+"");
                for (int lEi = 0; lEi < pbALAdeudosRealizados.size(); lEi++)
                {
                    if (pbALAdeudosRealizados.get(lEi).getpbEIdUsuarios()==Integer.parseInt((objDTMModelo.getValueAt(objJTRegistro.getSelectedRow(), 0))+""))
                    {
                        if (pbALAdeudosRealizados.get(lEi).getpbDMontoRenta() < lDResto)
                        {
                            lDResto = lDResto - pbALAdeudosRealizados.get(lEi).getpbDMontoRenta(); 
                            objQuerry.metpbSModificar(pbCNcon, "adeudos",
                                    "fechapago",
                                    "'"+objFecha.get(Calendar.YEAR)+
                                            "/"+((objDate.getMonth())+1)+"/"+
                                            objFecha.get(Calendar.DAY_OF_MONTH)+"'",
                                    "idusuarios="+objDTMModelo.getValueAt(objJTRegistro.getSelectedRow(), 0)+";");
                            if (Integer.parseInt((objDTMModelo.getValueAt(objJTRegistro.getSelectedRow(), 2))+"")==4)
                            {
                                objQuerry.metpbSModificar(pbCNcon, "usuarios","status","2","idusuario="+objDTMModelo.getValueAt(objJTRegistro.getSelectedRow(), 0)+";");
                                System.out.println("Actualize a 2");
                                CMensajes.cmetpbMsj(this, "Pago realizado correctamente");
                            }else
                            {
                                objQuerry.metpbSModificar(pbCNcon, "usuarios","status","1","idusuario="+objDTMModelo.getValueAt(objJTRegistro.getSelectedRow(), 0)+";");
                                System.out.println("Actualize a 1");
                                CMensajes.cmetpbMsj(this, "Pago realizado correctamente");
                            }
                        }else
                        {
                            CMensajes.cmetpbMsj(this, "Monto insuficiente");
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_objJBPagarActionPerformed

   /**
     *
     * @param evt Evento para cofirmar la baja de un producto de la tabla en
     * pantalla Luego entonces el cambio es en el status de producto a inactivo
     * correspondiente al valor 0 esto es un borrado lógico, envia en mensaje de
     * alerta y confirma "dato eliminado "
     */
    private void objJBSalirActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_objJBSalirActionPerformed
    {//GEN-HEADEREND:event_objJBSalirActionPerformed
        dispose();
    }//GEN-LAST:event_objJBSalirActionPerformed
    /**
     *
     * @param evt Evento de abre la ventana principial Inicia removiendo las
     * filas existentes,haciendo la conexcón a la base datos, para extraer a la
     * tabla activos las propiedades de idProductos, status, idProveedor ,
     * nombre, marca, costo, codigo de barras y categoría contenidas en la base
     * datos a la tabla "producto"
     */
    private void formWindowOpened(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowOpened
    {//GEN-HEADEREND:event_formWindowOpened
        objDTMModelo = (DefaultTableModel) objJTRegistro.getModel();
        pbALAdeudosRealizados = CManipulaDB.cmetpbALConsultaAdeudos(pbCNcon, "adeudos WHERE mesadeudo > 'a' AND anioadeudo > 0 AND fechapago is NULL" , "", "");
        pbALUsuarios = CManipulaDB.cmetpbALConsultaU(pbCNcon,
                "usuarios where status > 0",
                "", "");
        pbALRentasParametros = CManipulaDB.cmetpbALConsultaR(pbCNcon, "rentasParametros;", "", "");
        ArrayList<Object> lALMontoRenta = objQuerry.metpbALSeleccion(pbCNcon, "MAX(idrentaparametro)", "rentasparametros", "");
        int lEUltimo = Integer.parseInt(String.valueOf(lALMontoRenta.get(0)).trim()) - 1;
        objJLRentaActual.setText(pbALRentasParametros.get(lEUltimo).getPpvSRentaActual());
        System.out.println(pbALAdeudosRealizados);
        if (pbALAdeudosRealizados!=null)
        {
            for (int lEi = 0; lEi < pbALAdeudosRealizados.size(); lEi++)
            {
                for (int lEj = 0; lEj < pbALUsuarios.size(); lEj++)
                {
                    if (pbALAdeudosRealizados.get(lEi).getpbEIdUsuarios()==pbALUsuarios.get(lEj).getpbEIdUsuario())
                    {
                        objDTMModelo.addRow(new Object[]
                        {
                            pbALUsuarios.get(lEj).getpbEIdUsuario(),
                            pbALUsuarios.get(lEj).getpbSNombre()+" "+pbALUsuarios.get(lEj).getpbSApellidoPaterno()+" "+pbALUsuarios.get(lEj).getpbSApellidoMaterno(),
                            pbALUsuarios.get(lEj).getpbEStatus(),
                            pbALAdeudosRealizados.get(lEi).getpbDMontoRenta()
                        });
                        break;
                    }
                }
            }
        }else
        {
            CMensajes.cmetpbFalla(this, "No hay Adeudos");
        }
    }//GEN-LAST:event_formWindowOpened

    private void objJTBuscarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_objJTBuscarActionPerformed
    {//GEN-HEADEREND:event_objJTBuscarActionPerformed

    }//GEN-LAST:event_objJTBuscarActionPerformed
    /**
     *
     * @param evt Evento que habilita los botones de modifica, baja y busca a
     * partir de seleccionar un registro en la tabla TPrincipal
     */
    private void objJTRegistroMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_objJTRegistroMouseClicked
    {//GEN-HEADEREND:event_objJTRegistroMouseClicked
        double lDSuma=0;
        if (objJTRegistro.getSelectedRow() != -1)
        {
            CManipulaInterfaz.cmetpbHabilita(true, objJBPagar, objJLMonto);
            pbESeleccionado = Integer.parseInt((objDTMModelo.getValueAt(objJTRegistro.getSelectedRow(), 0))+"");
            for (int lEi = 0; lEi < pbALAdeudosRealizados.size(); lEi++)
            {
                if (pbALAdeudosRealizados.get(lEi).getpbEIdUsuarios()==pbESeleccionado)
                {
                    lDSuma+=pbALAdeudosRealizados.get(lEi).getpbDMontoRenta();
                }
            }
            objJLMonto.setText(lDSuma+"");
            objJTDeposito.setEnabled(true);
            System.out.println("Adeudo: "+lDSuma);
        }
    }//GEN-LAST:event_objJTRegistroMouseClicked
    /**
     *
     * @param evt Evento que filtra los registros mostrados con las propiedades
     * correspondientes en la tabla de activos que concuerden con los caracteres
     * tecleados con ayuda de la función StartsWith
     */
    private void objJTBuscarKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_objJTBuscarKeyTyped
    {//GEN-HEADEREND:event_objJTBuscarKeyTyped
        if ("Nombre de Usuario".equals(objJCBusqueda.getItemAt(objJCBusqueda.getSelectedIndex())))
        {
            CValidaciones.cmetpbAlfabetico(evt);
        } else
        {
            CValidaciones.cmetpbEntero(evt);
        }
    }//GEN-LAST:event_objJTBuscarKeyTyped

    private void objJTBuscarKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_objJTBuscarKeyPressed
    {//GEN-HEADEREND:event_objJTBuscarKeyPressed

    }//GEN-LAST:event_objJTBuscarKeyPressed

    public void metpbCargaTabla(String lSCondicion)
    {
        objDTMModelo = (DefaultTableModel) objJTRegistro.getModel();
        pbALUsuarios = CManipulaDB.cmetpbALConsultaU(pbCNcon, "usuarios WHERE "+lSCondicion,"", "");
        while (objDTMModelo.getRowCount() > 0)
        {
            objDTMModelo.removeRow(0);
        }
        try
        {
            for (int lEi = 0; lEi < pbALAdeudosRealizados.size(); lEi++)
            {
                for (int lEj = 0; lEj < pbALUsuarios.size(); lEj++)
                {
                    if (pbALAdeudosRealizados.get(lEi).getpbEIdUsuarios()==pbALUsuarios.get(lEj).getpbEIdUsuario())
                    {
                        objDTMModelo.addRow(new Object[]
                        {
                            pbALUsuarios.get(lEj).getpbEIdUsuario(),
                            pbALUsuarios.get(lEj).getpbSNombre()+" "+pbALUsuarios.get(lEj).getpbSApellidoPaterno()+" "+pbALUsuarios.get(lEj).getpbSApellidoMaterno(),
                            pbALUsuarios.get(lEj).getpbEStatus(),
                            pbALAdeudosRealizados.get(lEi).getpbDMontoRenta()
                        });
                        break;
                    }
                }
            }
        } catch (Exception e)
        {
            CMensajes.cmetpbMsj("Sin resultados", "Error", 1, this);
            objJTBuscar.setText("");
        }
    }

    private void objJTBuscarKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_objJTBuscarKeyReleased
    {//GEN-HEADEREND:event_objJTBuscarKeyReleased
        if ("Nombre de Usuario".equals(objJCBusqueda.getItemAt(objJCBusqueda.getSelectedIndex())))
        {
            pbSCondicion = "Nombre LIKE '%" + objJTBuscar.getText() + "%'";
            metpbCargaTabla(pbSCondicion);
        } else
        {
            pbSCondicion = "idusuario LIKE '%" + objJTBuscar.getText() + "%'";
            metpbCargaTabla(pbSCondicion);
        }

    }//GEN-LAST:event_objJTBuscarKeyReleased

    private void objJBActualizarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_objJBActualizarActionPerformed
    {//GEN-HEADEREND:event_objJBActualizarActionPerformed
        while (objDTMModelo.getRowCount() > 0)
        {
            objDTMModelo.removeRow(0);
        }
        formWindowOpened(null);
    }//GEN-LAST:event_objJBActualizarActionPerformed

    private void objJCBusquedaActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_objJCBusquedaActionPerformed
    {//GEN-HEADEREND:event_objJCBusquedaActionPerformed
        if ("Nombre de Usuario".equals(objJCBusqueda.getItemAt(objJCBusqueda.getSelectedIndex())))
        {
            objJLPaterno.setVisible(true);
            objJLMaterno.setVisible(true);
            objJTPaterno.setEnabled(true);
            objJTMaterno.setEnabled(true);
            objJLNombre.setVisible(true);
            objJLNombre.setText("Nombre (s)");
        } else
        {
            objJLPaterno.setVisible(false);
            objJLMaterno.setVisible(false);
            objJTPaterno.setEnabled(false);
            objJTMaterno.setEnabled(false);
            objJLNombre.setText(" ");
        }
        CManipulaInterfaz.cmetpbLimpia(objJTBuscar);
    }//GEN-LAST:event_objJCBusquedaActionPerformed

    private void objJTPaternoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_objJTPaternoActionPerformed
    {//GEN-HEADEREND:event_objJTPaternoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_objJTPaternoActionPerformed

    private void objJTPaternoKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_objJTPaternoKeyPressed
    {//GEN-HEADEREND:event_objJTPaternoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_objJTPaternoKeyPressed

    private void objJTPaternoKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_objJTPaternoKeyReleased
    {//GEN-HEADEREND:event_objJTPaternoKeyReleased
        if ("Nombre de Usuario".equals(objJCBusqueda.getItemAt(objJCBusqueda.getSelectedIndex())))
        {
            if (objJTBuscar.getText().length()>0)
            {
                pbSCondicion1 = pbSCondicion+"and apellidopaterno LIKE '%" + objJTPaterno.getText() + "%'";
                metpbCargaTabla(pbSCondicion1);
            }   
        }
    }//GEN-LAST:event_objJTPaternoKeyReleased

    private void objJTPaternoKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_objJTPaternoKeyTyped
    {//GEN-HEADEREND:event_objJTPaternoKeyTyped
        if ("Nombre de Usuario".equals(objJCBusqueda.getItemAt(objJCBusqueda.getSelectedIndex())))
        {
            CValidaciones.cmetpbAlfabetico(evt);
        }
    }//GEN-LAST:event_objJTPaternoKeyTyped

    private void objJTMaternoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_objJTMaternoActionPerformed
    {//GEN-HEADEREND:event_objJTMaternoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_objJTMaternoActionPerformed

    private void objJTMaternoKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_objJTMaternoKeyPressed
    {//GEN-HEADEREND:event_objJTMaternoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_objJTMaternoKeyPressed

    private void objJTMaternoKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_objJTMaternoKeyReleased
    {//GEN-HEADEREND:event_objJTMaternoKeyReleased
        if ("Nombre de Usuario".equals(objJCBusqueda.getItemAt(objJCBusqueda.getSelectedIndex())))
        {
            if (objJTPaterno.getText().length()>0)
            {
                pbSCondicion2 = pbSCondicion1+"and apellidomaterno LIKE '%" + objJTMaterno.getText() + "%'";
                metpbCargaTabla(pbSCondicion2);
            }   
        }
    }//GEN-LAST:event_objJTMaternoKeyReleased

    private void objJTMaternoKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_objJTMaternoKeyTyped
    {//GEN-HEADEREND:event_objJTMaternoKeyTyped
        if ("Nombre de Usuario".equals(objJCBusqueda.getItemAt(objJCBusqueda.getSelectedIndex())))
        {
            CValidaciones.cmetpbAlfabetico(evt);
        }
    }//GEN-LAST:event_objJTMaternoKeyTyped

    private void objJTDepositoKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_objJTDepositoKeyReleased
    {//GEN-HEADEREND:event_objJTDepositoKeyReleased
        if (objJTDeposito.getText().length()>0)
        {
            objJBPagar.setEnabled(true);
        }else
        {
            objJBPagar.setEnabled(false);
        }
    }//GEN-LAST:event_objJTDepositoKeyReleased

    private void objJTDepositoKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_objJTDepositoKeyPressed
    {//GEN-HEADEREND:event_objJTDepositoKeyPressed
        
        if (evt.getKeyChar() == '\n')
        {
            CManipulaInterfaz.cmetpbCambia(objJBPagar);
        }
    }//GEN-LAST:event_objJTDepositoKeyPressed

    private void objJTDepositoKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_objJTDepositoKeyTyped
    {//GEN-HEADEREND:event_objJTDepositoKeyTyped
        CValidaciones.cmetpbFlotante(evt);
    }//GEN-LAST:event_objJTDepositoKeyTyped

    private void objJBPagarKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_objJBPagarKeyPressed
    {//GEN-HEADEREND:event_objJBPagarKeyPressed
        if (evt.getKeyChar() == '\n')
        {
            objJBPagarActionPerformed(null);
        }
    }//GEN-LAST:event_objJBPagarKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(CPagoAdeudos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(CPagoAdeudos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(CPagoAdeudos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(CPagoAdeudos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new CPagoAdeudos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JButton objJBActualizar;
    public static javax.swing.JButton objJBPagar;
    public static javax.swing.JButton objJBSalir;
    private javax.swing.JComboBox<String> objJCBusqueda;
    private javax.swing.JLabel objJLMaterno;
    private javax.swing.JLabel objJLMonto;
    private javax.swing.JLabel objJLNombre;
    private javax.swing.JLabel objJLPaterno;
    private javax.swing.JLabel objJLRentaActual;
    private javax.swing.JTextField objJTBuscar;
    private javax.swing.JTextField objJTDeposito;
    private javax.swing.JTextField objJTMaterno;
    private javax.swing.JTextField objJTPaterno;
    private javax.swing.JTable objJTRegistro;
    // End of variables declaration//GEN-END:variables
}
