/* Nombre de la clase                : CModidicaRentasParametros 
 * Descripción de la clase        : Clase donde almacena los  bailes que que ocupan en el ballet
 * Fecha de creación                 : 15/04/2016 
 * Elaboró                                     : Rogelio Bernal / Carlos Trujilo 
 * Fecha de Liberación              : - 
 * Autorizó  : -
 * Fecha Mantenimiento           : 
 * Folio mantenimiento             : 
 * Descripción del mantto       :
 * Responsable                          :  
 * Revisor                                    : 
 */
package bfx.rentas;

import bfx.controladores.*;
import java.awt.Event;
import java.awt.event.FocusListener;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.sql.*;
import java.text.SimpleDateFormat;
import javax.swing.InputMap;
import javax.swing.*;
import javax.swing.KeyStroke;

/**
 * Interfaz gráfica de rentas parametros para modificar Rentas Parametro
 * @author Techno Engineers
 * @version 1.0
 */
public class CModificaRentasParametros extends javax.swing.JFrame {
    
    static CModificaRentasParametros objPantallaModificaRenta1 = new CModificaRentasParametros();
    private ArrayList <CRentasParametros> lALc= new ArrayList<CRentasParametros>();
    static int lEIdRentaParametro = 0;
    /**
     * Creates new form CModificaRentasParametros
     */
    public CModificaRentasParametros() {
        initComponents();
        
        Limitar();
        
        //evita el copiar y pegar
        InputMap map1 = objTFnuevaRenta.getInputMap(objTFnuevaRenta.WHEN_FOCUSED);
        map1.put(KeyStroke.getKeyStroke(KeyEvent.VK_V, Event.CTRL_MASK), "null");
        /*InputMap map2 = jDNuevaFechaRenta.getInputMap(jDNuevaFechaRenta.WHEN_FOCUSED);
        map2.put(KeyStroke.getKeyStroke(KeyEvent.VK_V, Event.CTRL_MASK), "null");*/
    }

    //metodo limitar caracteres del jtext
    public void Limitar(){
        objTFnuevaRenta.setDocument(new CLimitarCaracter(objTFnuevaRenta, 8));
    }
    
    public int validaCamposVacios()
    {
        if (objTFnuevaRenta.getText().equals(""))
        {
            CMensajes.cmetpbFalla(this, "El campo de Nueva Renta, no debe estar en blanco");
            CManipulaInterfaz.cmetpbCambia(objTFnuevaRenta);
            CManipulaInterfaz.cmetpbHabilita(false,objDnuevaFechaRenta);
            return 1;
        }else if (objDnuevaFechaRenta.getDate() == null)
        {
            CMensajes.cmetpbFalla(this, "El campo de Nueva Fecha de Renta, no debe estar en blanco");
            CManipulaInterfaz.cmetpbCambia(objDnuevaFechaRenta);
            CManipulaInterfaz.cmetpbHabilita(false,objTFnuevaRenta);
            return 1;
        }
        return 0;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        objLmodificaRP = new javax.swing.JLabel();
        objLrentaActual = new javax.swing.JLabel();
        objTFrentaAnterior = new javax.swing.JTextField();
        objLnuevaFechaRenta = new javax.swing.JLabel();
        objBaceptar = new javax.swing.JButton();
        objBcancelar = new javax.swing.JButton();
        objLfechaRentaActual = new javax.swing.JLabel();
        objTFfechaRentaAnterior = new javax.swing.JTextField();
        objLnuevaRenta = new javax.swing.JLabel();
        objTFnuevaRenta = new javax.swing.JTextField();
        objDnuevaFechaRenta = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(66, 112, 158));
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowOpened(java.awt.event.WindowEvent evt)
            {
                formWindowOpened(evt);
            }
        });

        objLmodificaRP.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        objLmodificaRP.setText("Modificaciones de Parametros Rentas");

        objLrentaActual.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        objLrentaActual.setText("Renta Actual:");

        objTFrentaAnterior.setMaximumSize(new java.awt.Dimension(150, 25));
        objTFrentaAnterior.setMinimumSize(new java.awt.Dimension(150, 25));
        objTFrentaAnterior.setPreferredSize(new java.awt.Dimension(150, 25));
        objTFrentaAnterior.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                objTFrentaAnteriorActionPerformed(evt);
            }
        });
        objTFrentaAnterior.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                objTFrentaAnteriorKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                objTFrentaAnteriorKeyTyped(evt);
            }
        });

        objLnuevaFechaRenta.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        objLnuevaFechaRenta.setText("Nueva Fecha Renta:");

        objBaceptar.setBackground(new java.awt.Color(255, 255, 255));
        objBaceptar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        objBaceptar.setText("Aceptar");
        objBaceptar.setMaximumSize(new java.awt.Dimension(150, 25));
        objBaceptar.setMinimumSize(new java.awt.Dimension(150, 25));
        objBaceptar.setPreferredSize(new java.awt.Dimension(150, 25));
        objBaceptar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                objBaceptarActionPerformed(evt);
            }
        });
        objBaceptar.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                objBaceptarKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                objBaceptarKeyTyped(evt);
            }
        });

        objBcancelar.setBackground(new java.awt.Color(255, 255, 255));
        objBcancelar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        objBcancelar.setText("Cancelar");
        objBcancelar.setMaximumSize(new java.awt.Dimension(150, 25));
        objBcancelar.setMinimumSize(new java.awt.Dimension(150, 25));
        objBcancelar.setPreferredSize(new java.awt.Dimension(150, 25));
        objBcancelar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                objBcancelarActionPerformed(evt);
            }
        });
        objBcancelar.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                objBcancelarKeyTyped(evt);
            }
        });

        objLfechaRentaActual.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        objLfechaRentaActual.setText("Fecha Renta Actual:");

        objTFfechaRentaAnterior.setMaximumSize(new java.awt.Dimension(150, 25));
        objTFfechaRentaAnterior.setMinimumSize(new java.awt.Dimension(150, 25));
        objTFfechaRentaAnterior.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                objTFfechaRentaAnteriorActionPerformed(evt);
            }
        });
        objTFfechaRentaAnterior.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                objTFfechaRentaAnteriorKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                objTFfechaRentaAnteriorKeyTyped(evt);
            }
        });

        objLnuevaRenta.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        objLnuevaRenta.setText("Nueva Renta:");

        objTFnuevaRenta.setMaximumSize(new java.awt.Dimension(150, 25));
        objTFnuevaRenta.setMinimumSize(new java.awt.Dimension(150, 25));
        objTFnuevaRenta.setPreferredSize(new java.awt.Dimension(150, 25));
        objTFnuevaRenta.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                objTFnuevaRentaActionPerformed(evt);
            }
        });
        objTFnuevaRenta.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                objTFnuevaRentaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                objTFnuevaRentaKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(objLmodificaRP)
                        .addGap(103, 103, 103))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(objBaceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(objBcancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(objLnuevaFechaRenta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(objLrentaActual, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(objLfechaRentaActual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(objLnuevaRenta))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(objTFfechaRentaAnterior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(objTFrentaAnterior, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(objTFnuevaRenta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(objDnuevaFechaRenta, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(89, 89, 89))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(objLmodificaRP)
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(objLrentaActual, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(objTFrentaAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(objLfechaRentaActual, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(objTFfechaRentaAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(objLnuevaRenta, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(objTFnuevaRenta, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(objLnuevaFechaRenta, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(objDnuevaFechaRenta, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(objBaceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(objBcancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void objTFrentaAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_objTFrentaAnteriorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_objTFrentaAnteriorActionPerformed

    private void objTFrentaAnteriorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_objTFrentaAnteriorKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyChar() == '\n')//al presionar enter se pasa a la siguiente caja y se inhabilita la anterior
        {
            CManipulaInterfaz.cmetpbCambia(objDnuevaFechaRenta);
            CManipulaInterfaz.cmetpbHabilita(false, objTFrentaAnterior);
        }
    }//GEN-LAST:event_objTFrentaAnteriorKeyPressed

    private void objTFrentaAnteriorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_objTFrentaAnteriorKeyTyped
        // TODO add your handling code here:
        CValidaciones.cmetpbFlotante(evt);//valida que solo se acepten flotantes
    }//GEN-LAST:event_objTFrentaAnteriorKeyTyped

    private void objBaceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_objBaceptarActionPerformed
            int lEValida = this.validaCamposVacios();//llamamos al metodo validaCamposVacios
        
            if(lEValida == 0){
                //System.out.println("si");
                //obtenemos la fecha del jDateChooser
                String lSFechaRentaActual = new SimpleDateFormat("yyyy-MM-dd").format(objDnuevaFechaRenta.getDate());
                System.out.println(lSFechaRentaActual);
                double lDRentaAnterior = Double.parseDouble(objTFrentaAnterior.getText());
                String lSFechaRentaAnt = objTFfechaRentaAnterior.getText();
                System.out.println("dRentaAnterior: " + lDRentaAnterior + "\n sFechaRentaAnterior: " + lSFechaRentaAnt);

                //Conexion lCNConexion = new Conexion();
                Connection lCNConexion = CManipulaDB.cmetpbConectaDB();

                String lSDatos = lEIdRentaParametro + "," + lDRentaAnterior + "" + ",'" + lSFechaRentaAnt + "'" + ","
                        + "" + objTFnuevaRenta.getText() + "" + ",'" + lSFechaRentaActual + "'";
                CQuerys objCQuerys2 = new CQuerys();
                objCQuerys2.metpbSModificar(lCNConexion, "rentasparametros", "idrentaparametro,rentaanterior,fecharentaanterior,rentaactual,fecharentaactual",
                        lSDatos, "idrentaparametro=1");

                if (objCQuerys2 != null){
                    try {
                        CMensajes.cmetpbExito(this);
                        lCNConexion.close();
                        dispose();
                        CModificaRentasParametros cMP = new CModificaRentasParametros();
                        cMP.setVisible(true);
                        cMP.setLocationRelativeTo(null);
                        cMP.setTitle("Modifica Rentas");
                    } catch (Exception ex) {
                        CMensajes.cmetpbMsj(this, "Error en DB... " + ex.getMessage());
                    }
                } else {
                    CMensajes.cmetpbFalla(this, "No se ha podido modificar correctamente.");
                }
                objBcancelarActionPerformed(evt);
            }
    }//GEN-LAST:event_objBaceptarActionPerformed

    private void objBaceptarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_objBaceptarKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyChar() == '\n')
        {
            objBaceptarActionPerformed(null);
        }
    }//GEN-LAST:event_objBaceptarKeyPressed

    private void objBaceptarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_objBaceptarKeyTyped

    }//GEN-LAST:event_objBaceptarKeyTyped

    private void objBcancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_objBcancelarActionPerformed
        // TODO add your handling code here:
        //si da clic en cancelar, limpia las cajas y se posiciona en la primer caja de texto
        objDnuevaFechaRenta.setCalendar(null);
        CManipulaInterfaz.cmetpbLimpia(objTFnuevaRenta);
        CManipulaInterfaz.cmetpbHabilita(true, objTFnuevaRenta);
        CManipulaInterfaz.cmetpbHabilitaObjetos(false, objDnuevaFechaRenta);
        CManipulaInterfaz.cmetpbCambia(objTFnuevaRenta);
        //dispose();
    }//GEN-LAST:event_objBcancelarActionPerformed

    private void objBcancelarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_objBcancelarKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_objBcancelarKeyTyped

    private void objTFfechaRentaAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_objTFfechaRentaAnteriorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_objTFfechaRentaAnteriorActionPerformed

    private void objTFfechaRentaAnteriorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_objTFfechaRentaAnteriorKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_objTFfechaRentaAnteriorKeyPressed

    private void objTFfechaRentaAnteriorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_objTFfechaRentaAnteriorKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_objTFfechaRentaAnteriorKeyTyped

    private void objTFnuevaRentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_objTFnuevaRentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_objTFnuevaRentaActionPerformed

    private void objTFnuevaRentaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_objTFnuevaRentaKeyPressed
        // TODO add your handling code here:
        //al presionar enter se pasa a la siguiente caja y se inhabilita la anterior
        if (evt.getKeyChar() == '\n')
        {
            CManipulaInterfaz.cmetpbCambia(objDnuevaFechaRenta);
            CManipulaInterfaz.cmetpbHabilita(false, objTFnuevaRenta);
        }
    }//GEN-LAST:event_objTFnuevaRentaKeyPressed

    private void objTFnuevaRentaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_objTFnuevaRentaKeyTyped
        // TODO add your handling code here:
        CValidaciones.cmetpbFlotante(evt);//valida que solo se acepten flotantes
    }//GEN-LAST:event_objTFnuevaRentaKeyTyped

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        CManipulaInterfaz.cmetpbHabilita(false, objDnuevaFechaRenta);
        Connection lCNConexion =CManipulaDB.cmetpbConectaDB();
        lALc = CManipulaDB.cmetpbALCargaRentas(CManipulaDB.cmetpbALConsult(lCNConexion, "rentasparametros", "*",""));
        System.out.println("Arreglo: "+lALc);
        if (!lALc.isEmpty()) 
        {
                for (int i = 0; i < lALc.size(); i++)
                {
                    lEIdRentaParametro = lALc.get(i).getPpvERentaParametro();
                    System.out.println("CIdRentaParametro: " + lEIdRentaParametro);
                    objTFrentaAnterior.setText(lALc.get(i).getPpvSRentaActual().trim());
                    objTFfechaRentaAnterior.setText(lALc.get(i).getPpvSFechaRentaActual().trim());
                }
                CManipulaInterfaz.cmetpbHabilita(false, objTFrentaAnterior);
                CManipulaInterfaz.cmetpbHabilita(false, objTFfechaRentaAnterior);
                //CManipulaInterfaz.cmetpbHabilita(true, objTFNuevaRenta);
                objTFnuevaRenta.requestFocus();
        } else {
            CMensajes.cmetpbFalla(this, "No hay datos a modificarr.");
        }
        CManipulaDB.cmetpbDesconectaDB(lCNConexion);
    }//GEN-LAST:event_formWindowOpened

    private void objDnuevaFechaRentaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_objDnuevaFechaRentaKeyPressed
        // TODO add your handling code here:
        //al presionar enter se pasa a la siguiente caja y se inhabilita la anterior
        if (evt.getKeyChar() == '\n')
        {
            CManipulaInterfaz.cmetpbCambia(objBaceptar);
            CManipulaInterfaz.cmetpbHabilita(false, objDnuevaFechaRenta);
            //jDNuevaFechaRenta.getDateEditor().setEnabled(false);
        }
    }//GEN-LAST:event_objDnuevaFechaRentaKeyPressed

    private void objDnuevaFechaRentaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_objDnuevaFechaRentaKeyTyped
        // TODO add your handling code here:
        CValidaciones.cmetpbAlfanumerico(evt);
    }//GEN-LAST:event_objDnuevaFechaRentaKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CModificaRentasParametros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CModificaRentasParametros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CModificaRentasParametros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CModificaRentasParametros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                objPantallaModificaRenta1.setTitle("Modifica Rentas");
                objPantallaModificaRenta1.setLocationRelativeTo(null);
                objPantallaModificaRenta1.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton objBaceptar;
    private javax.swing.JButton objBcancelar;
    private com.toedter.calendar.JDateChooser objDnuevaFechaRenta;
    private javax.swing.JLabel objLfechaRentaActual;
    private javax.swing.JLabel objLmodificaRP;
    private javax.swing.JLabel objLnuevaFechaRenta;
    private javax.swing.JLabel objLnuevaRenta;
    private javax.swing.JLabel objLrentaActual;
    private javax.swing.JTextField objTFfechaRentaAnterior;
    private javax.swing.JTextField objTFnuevaRenta;
    private javax.swing.JTextField objTFrentaAnterior;
    // End of variables declaration//GEN-END:variables
}
